@inject SignInManager<TeamUpUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="tabnav">
    <!--
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Opis</a></li>
    <li class="@ManageNavPages.EmailNavClass(ViewContext)"><a id="email" asp-page="./Email">Email</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData">Personal data</a></li>
        -->
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Opis</a></li>
    <li class="@ManageNavPages.ChangeSpecializationsNavClass(ViewContext)"><a asp-page="./ChangeSpecializations">Specjalizacje</a></li>
    <li class="@ManageNavPages.SettingsNavClass(ViewContext)"><a asp-page="./Settings">Ustawienia</a></li>
    <li class="@ManageNavPages.UserTeamsNavClass(ViewContext)"><a asp-page="./UserTeams">Teamy</a></li>
    <li class="@ManageNavPages.MessagesNavClass(ViewContext)"><a asp-page="./Messages">Wiadomości</a></li>
</ul>